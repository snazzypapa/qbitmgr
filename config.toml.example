#### App Details
logLevel = 'INFO' # Always all uppercase

#### Qbittorrent WebUI Login Details
host = 'localhost:8080'     # web address and port of qbittorrent webui. String
username = 'username'       # username for webui. String
password = 'password123'    # password for webui. String

#### File Movers
incompleteDownloadsDir = '/mnt/downloads/qbittorrent/incoming'                                          # Full path without trailing slash. String
completeDownloadsDir = '/mnt/downloads/qbittorrent/completed'                                           # Full path without trailing slash. String
plexScanCommand = ['docker', 'exec', 'plex', '/usr/lib/plexmediaserver/Plex Media Scanner', '--scan']   # Python list format with arguments. This is the one for docker on linux.
cleanerInterval = 10                                                                                    # Minutes between checking for completed seeds. Integer

#### Share Limits
[shareLimits]                                                       # create as many of share limit groups as you please
    [shareLimits.private]                                           # rename 'private' to whatever you prefer
        priorityInQueue = true                                      # move matching torrents to top of queue. Lowercase boolean
        trackers = ['bee-bob-tracker.com', 'bee-bo-tracker.com']    # python list format of URLs of trackers. Can be left blank: []
        categories = []                                             # python list format of categories. Can be left blank: []
        ratio_limit = -1                                            # ratio_limit – max ratio to seed a torrent. (-2 means use the global value and -1 is no limit). Integer
        seeding_time_limit = 4320                                   # seeding_time_limit – minutes (-2 means use the global value and -1 is no limit). Integer
        upload_speed_limit = -1                                     # upload_speed_limit – bytes/second (-1 sets the limit to infinity). Integer
        tags = 'Private'                                            # tag to add to the download. This is not 100% necessary but it is recommended to include a tag to reduce API calls. String

    [shareLimits.iso]
        priorityInQueue = true
        trackers = []
        categories = ['ISO', 'linux']
        ratio_limit = 2
        seeding_time_limit = 1440
        upload_speed_limit = 7500000
        tags = 'ISO'

    [shareLimits.default]                                           # it is best practice to keep a default sharelimit group here
        priorityInQueue = true 
        trackers = [] # Leave blank for default
        categories = [] # Leave blank for default
        ratio_limit = 2
        seeding_time_limit = 1440
        upload_speed_limit = 7500000
        tags = 'Default'

#### Genre Specifications
[genres]
    [genres.gameupdates]                                    # rename 'gameupdates' to whatever you prefer
        moveToDir = '/mnt/local/Media/Game Updates'         # leave as '' to not move completed downloads
        keepDirStructure = true                             # false moves files to parent directory of category and deletes empty directories
        keepSpecificFileTypes = ['.mp4', '.mkv']            # python list format of file extensions to keep from downloads, leave as '[]' to keep all. Python list format.
        deleteFromClientWhenDone = false                    # remove torrent from client when done seeding
        scanPlex = false                                    # tell plex to scan libraries upon download completion
            [genres.gameupdates.rssRules]                   # update 'gameupdates' to your genre
                enabled = true                              # whether the rule is enabled. Boolean
                mustContain = ''                            # the substring that the torrent name must contain. This will include the --name flag from CLI. String
                mustNotContain = 'x264|x265'                # the substring that the torrent name must not contain. String
                useRegex = false                            # regex mode in "mustContain" and "mustNotContain." Boolean
                episodeFilter = ''                          # episode filter definition
                smartFilter = true                          # enable smart episode filter. Boolean
                previouslyMatchedEpisodes = ''              # the list of episode IDs already matched by smart filter
                affectedFeeds = ['http://tracker.rssfeed']  # python list format of feeds to download from
                ignoreDays = 1                              # ignore subsequent rule matches. Integer
                lastMatch = ''                              # The rule last match time
                addPaused = false                           # Add matched torrent in paused mode. Boolean
                assignedCategory = ''                       # Leave blank, category is assigned via the '--name' flag when you create a rule using the CLI 
                savePath = ''                               # Leave this blank. Save path is set by category

    [genres.iso]
        moveToDir = '/mnt/local/Media/ISO Files'
        keepDirStructure = false
        keepSpecificFileTypes = ['.iso']
        deleteFromClientWhenDone = false
        scanPlex = false
            [genres.iso.rssRules]
                enabled = true
                mustContain = '1080p'
                mustNotContain = ''
                useRegex = false
                episodeFilter = true
                smartFilter = true
                previouslyMatchedEpisodes = ''
                affectedFeeds = ['http://tracker1.rssfeed', 'http://tracker2.rssfeed']
                ignoreDays = 1
                lastMatch = ''
                addPaused = true
                assignedCategory = ''
                savePath = ''
